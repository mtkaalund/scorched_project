// Not a final draft. Can't fully decide if objects should handle themselves OR be mutated by an outside system...
// For objects, inheritance and dependency injection:
// - The culture these days is to avoid inheritance beyond one or two levels deep
// - I always go by the established rule of "has a"- or "is a"-relationship:
// For example: a "Tank IS a game object" so it inherits cGameObject. But a "tank HAS a shape. A tank IS NOT a shape" so cShape is injected as a class member
// Virtual classes should always be inherited and never instansiated. Final classes should never be derived.

// Still not sure if this is the "right" way to do rendering...
virtual cShape {
    cTexture : olc::Sprite
    cFillColor : vec3
    virtual void Draw()
}

final cCircle : cShape {
    fRadius : float
    override void Draw()
}

final cRectangle : cShape {
    fWidth : float
    fHeight : float
    override void Draw()
}

final cSquare : cShape {
    fSize : float
    override void Draw()
}